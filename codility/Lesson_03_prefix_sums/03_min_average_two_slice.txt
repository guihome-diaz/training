Copyright 2009–2015 by Codility Limited. 
All Rights Reserved. Unauthorized copying, publication or disclosure prohibited. 
See https://codility.com/programmers/ 

--------------------
The following copy is for my personal use and reference only!
Do NOT use it for anything else!
--------------------



A non-empty zero-indexed array A consisting of N integers is given. A pair of integers (P, Q), such that 0 ≤ P < Q < N, is called a slice of array A (notice that the slice contains at least two elements). The average of a slice (P, Q) is the sum of A[P] + A[P + 1] + ... + A[Q] divided by the length of the slice. To be precise, the average equals (A[P] + A[P + 1] + ... + A[Q]) / (Q − P + 1).

For example, array A such that:

    A[0] = 4
    A[1] = 2
    A[2] = 2
    A[3] = 5
    A[4] = 1
    A[5] = 5
    A[6] = 8

contains the following example slices:

        slice (1, 2), whose average is (2 + 2) / 2 = 2;
        slice (3, 4), whose average is (5 + 1) / 2 = 3;
        slice (1, 4), whose average is (2 + 2 + 5 + 1) / 4 = 2.5.

The goal is to find the starting position of a slice whose average is minimal.

Write a function:

    class Solution { public int solution(int[] A); } 

that, given a non-empty zero-indexed array A consisting of N integers, returns the starting position of the slice with the minimal average. If there is more than one slice with a minimal average, you should return the smallest starting position of such a slice.

For example, given array A such that:

    A[0] = 4
    A[1] = 2
    A[2] = 2
    A[3] = 5
    A[4] = 1
    A[5] = 5
    A[6] = 8

the function should return 1, as explained above.

Assume that:

        N is an integer within the range [2..100,000];
        each element of array A is an integer within the range [−10,000..10,000].

Complexity:

        expected worst-case time complexity is O(N);
        expected worst-case space complexity is O(N), beyond input storage (not counting the storage required for input arguments).

Elements of input arrays can be modified.




---------------------------------
Mathematics explanation:
http://codility-lessons.blogspot.se/2014/07/lesson-3-minavgtwoslice.html

To check the number of the slots that produce the minimum average, we only have to check the
sum of the consecutive two or three slots.

This can be said to any slice of an arbitrary size.

If any sub-slice of a certain slice can produce a smaller average, then the original slice is
not the slice that can produce a smaller portion. It the average values of the original slice
and sub-slice are the same, we can simply take the index where the original slice starts,
since what we need to return is the smallest index.
---------------------------------
