#####################################
# Section 6: simple REACT application
#
# @author Stephen Grider (trainer)
# @author Guillaume Diaz (trainee)
# @version 1.0, 2022/01
#####################################
#
# (=| DEVELOPMENT AND TESTS CONTAINER |=)
#
# This container will start the application on the port 3000 (`npm run start`)
#
# Key points: 
#    a) Development files are located inside a VOLUME, therefore changes are dynamic. 
#    b) Build files (/node_modules) is not available, it is only inside the container
#    c) You can access nodeJS server directly through container's port 3000
#
#####################################
# Build with: 
# docker build . -f .\Dockerfile.dev -t guihomediaz/section_6/react-app-dev
#
# Run with: 
# docker run --name s6-app-dev -p 4000:3000 -v /opt/app/node_modules -v ${pwd}:/opt/app guihomediaz/section_6/react-app-dev
#####################################

# Use an existing image as a base
#  !! careful !! When you work with NodeJS it is better to use a specific version of the base image
FROM node:17-alpine

# Application working directory inside the container
WORKDIR '/opt/app'

# Install REACT core libraries
RUN npm install react-scripts \ 
   # Listen for files changes. If so, re-build the app and apply changes
   npm install nodemon

# Copy project description and dependencies list to target working directory
# Isolate package.json to detect dependencies changes by docker
# Isolate package-lock.json to ensure we always build with the same dependencies version
COPY package*.json .

# Build project dependinces
RUN npm install

# Copy all projects files inside the container
#######
###### !!! Careful !!! 
####### This will also copy (and replace) the node_modules folder! 
####### To avoid that: 
#######    Solution 1. Remove your local folder 'node_modules' (preferred option). It means you will only compile on Docker
#######    Solution 2. Do the files copy BEFORE the 'npm install'
#######
####### !!! USE VOLUMES INSTEAD !!! 
#######
#COPY . .

# Expose port explicitly
EXPOSE 3000

# Start project in development mode (listen for files changes as well)
# Build project in START phase, to apply development policies and hot reload
CMD [ "npm", "run", "start" ]
